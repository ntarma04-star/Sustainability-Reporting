{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "53091697-4f0c-491b-a106-c795d08c34c4",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "('Total_Waste_Tons', 'Recycled_Tons', 'Composted_Tons', 'Landfilled_Tons', 'Plastic_Recycled_Tons', 'Paper_Recycled_Tons', 'Metal_Recycled_Tons', 'Glass_Recycled_Tons', 'Ewaste_Recycled_Tons')",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[7], line 9\u001b[0m\n\u001b[1;32m      7\u001b[0m     column_sum \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n\u001b[1;32m      8\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m row \u001b[38;5;129;01min\u001b[39;00m content:\n\u001b[0;32m----> 9\u001b[0m         column_sum \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;28mfloat\u001b[39m(\u001b[43mrow\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mTotal_Waste_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mRecycled_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mComposted_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mLandfilled_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mPlastic_Recycled_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mPaper_Recycled_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mMetal_Recycled_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mGlass_Recycled_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mEwaste_Recycled_Tons\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m)\n\u001b[1;32m     11\u001b[0m \u001b[38;5;28mprint\u001b[39m(column_sum)\n",
      "\u001b[0;31mKeyError\u001b[0m: ('Total_Waste_Tons', 'Recycled_Tons', 'Composted_Tons', 'Landfilled_Tons', 'Plastic_Recycled_Tons', 'Paper_Recycled_Tons', 'Metal_Recycled_Tons', 'Glass_Recycled_Tons', 'Ewaste_Recycled_Tons')"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "\n",
    "file_path = \"/Users/augustineenninful/Downloads/recycling_data.csv\"\n",
    "\n",
    "with open(file_path, \"r\", encoding=\"latin-1\") as file:  # or encoding=\"ISO-8859-1\"\n",
    "    content = csv.DictReader(file)\n",
    "    column_sum = 0\n",
    "    for row in content:\n",
    "        column_sum += float(row['Total_Waste_Tons', 'Recycled_Tons', 'Composted_Tons', 'Landfilled_Tons', 'Plastic_Recycled_Tons', 'Paper_Recycled_Tons', 'Metal_Recycled_Tons', 'Glass_Recycled_Tons', 'Ewaste_Recycled_Tons'])\n",
    "        \n",
    "print(column_sum)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "736c3d4d-0ab6-4f49-af0e-a055df63a009",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Column totals:\n",
      "Total_Waste_Tons: 9979.0\n",
      "Recycled_Tons: 7111.0\n",
      "Composted_Tons: 2960.0\n",
      "Landfilled_Tons: 4558.0\n",
      "Plastic_Recycled_Tons: 1947.0\n",
      "Paper_Recycled_Tons: 2546.0\n",
      "Metal_Recycled_Tons: 1158.0\n",
      "Glass_Recycled_Tons: 963.0\n",
      "Ewaste_Recycled_Tons: 311.0\n",
      "Grand Total = 31533.0\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "\n",
    "file_path = \"/Users/augustineenninful/Downloads/recycling_data.csv\"\n",
    "\n",
    "columns_to_sum = [\n",
    "    'Total_Waste_Tons', 'Recycled_Tons', 'Composted_Tons', 'Landfilled_Tons',\n",
    "    'Plastic_Recycled_Tons', 'Paper_Recycled_Tons', 'Metal_Recycled_Tons',\n",
    "    'Glass_Recycled_Tons', 'Ewaste_Recycled_Tons'\n",
    "]\n",
    "\n",
    "with open(file_path, \"r\", encoding=\"latin-1\") as file:\n",
    "    reader = csv.DictReader(file)\n",
    "    column_sums = {col: 0 for col in columns_to_sum}  # keep a sum per column\n",
    "\n",
    "    for row in reader:\n",
    "        for col in columns_to_sum:\n",
    "            try:\n",
    "                column_sums[col] += float(row[col])\n",
    "            except (ValueError, KeyError):\n",
    "                pass  # skip blanks or bad data\n",
    "\n",
    "print(\"Column totals:\")\n",
    "for col, total in column_sums.items():\n",
    "    print(f\"{col}: {total}\")\n",
    "\n",
    "# If you want a grand total of all columns:\n",
    "grand_total = sum(column_sums.values())\n",
    "print(\"Grand Total =\", grand_total)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "390f6fbb-19e1-440c-b019-b6f2478dd4c6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
